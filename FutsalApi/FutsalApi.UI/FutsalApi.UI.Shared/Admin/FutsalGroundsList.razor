
@page "/admin/futsal-grounds"
@using FutsalApi.Data.Models
@inject HttpClient Http

<PageTitle>Futsal Grounds</PageTitle>

<h1>Futsal Grounds</h1>

@if (futsalGrounds == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <Grid TItem="FutsalGroundResponse" Items="futsalGrounds">
    <GridColumn TItem="FutsalGroundResponse" HeaderText="Name" PropertyName="Name" />
    <GridColumn TItem="FutsalGroundResponse" HeaderText="Location" PropertyName="Location" />
    <GridColumn TItem="FutsalGroundResponse" HeaderText="Price Per Hour" PropertyName="PricePerHour" />
    <GridColumn TItem="FutsalGroundResponse" HeaderText="Owner" PropertyName="OwnerId" />
    <GridColumn TItem="FutsalGroundResponse" HeaderText="Actions">
        <Button Color="ButtonColor.Primary" @onclick="() => EditGround(context.Id)">Edit</Button>
        <Button Color="ButtonColor.Danger" @onclick="() => DeleteGround(context.Id)">Delete</Button>
    </GridColumn>
</Grid>
}

@code {
    private FutsalGroundResponse[]? futsalGrounds;

    protected override async Task OnInitializedAsync()
    {
        futsalGrounds = await Http.GetFromJsonAsync<FutsalGroundResponse[]>("FutsalGround");
    }

    void EditGround(int groundId)
    {
        // Navigate to edit page
    }

    async Task DeleteGround(int groundId)
    {
        await Http.DeleteAsync($"FutsalGround/{groundId}");
        futsalGrounds = await Http.GetFromJsonAsync<FutsalGroundResponse[]>("FutsalGround");
    }
}
