@page "/admin/roles/{Id}"
@using FutsalApi.Data.DTO
@using FutsalApi.Data.Models
@using Auth
@inject HttpClient Http
@inject NavigationManager NavigationManager

<EditForm Model="@role" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="role.Name" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public string? Id { get; set; }

    private RoleRequest role = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            var result = await Http.GetFromJsonAsync<Role>($"Roles/{Id}");
            if (result != null && result.Name != null)
            {
                role = new RoleRequest { Name = result.Name };
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        if (Id != null)
        {
            await Http.PutAsJsonAsync($"Roles/{Id}", role);
        }
        else
        {
            await Http.PostAsJsonAsync("Roles", role);
        }

        NavigationManager.NavigateTo("/admin/roles");
    }
}
