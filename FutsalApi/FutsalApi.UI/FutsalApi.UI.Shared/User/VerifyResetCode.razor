@page "/verify-reset-code"
@using FutsalApi.Data.Models
@using Auth
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Verify Reset Code</PageTitle>

<h1>Verify Reset Code</h1>

<EditForm Model="@verifyRequest" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="verifyRequest.Email" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="reset-code">Reset Code</label>
        <InputText id="reset-code" @bind-Value="verifyRequest.ResetCode" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Verify Code</button>
</EditForm>

@code {
    private VerifyResetCodeRequest verifyRequest = new();

    private async Task HandleValidSubmit()
    {
        var result = await Http.PostAsJsonAsync("User/verifyResetCode", verifyRequest);
        if (result.IsSuccessStatusCode)
        {
            // Code is valid, navigate to reset password page with email and code
            NavigationManager.NavigateTo($"/reset-password?email={verifyRequest.Email}&code={verifyRequest.ResetCode}");
        }
        // Handle error cases
    }
}
