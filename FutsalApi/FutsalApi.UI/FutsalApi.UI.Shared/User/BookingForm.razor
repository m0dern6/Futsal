
@page "/bookings/new/{GroundId:int}"
@using FutsalApi.Data.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>New Booking</PageTitle>

<h1>New Booking</h1>

<EditForm Model="@bookingRequest" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="booking-date">Date</label>
        <InputDate id="booking-date" @bind-Value="bookingRequest.BookingDate" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="start-time">Start Time</label>
        <InputDate Type="InputDateType.Time" id="start-time" @bind-Value="bookingRequest.StartTime" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="end-time">End Time</label>
        <InputDate Type="InputDateType.Time" id="end-time" @bind-Value="bookingRequest.EndTime" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@code {
    [Parameter]
    public int GroundId { get; set; }

    private BookingRequest bookingRequest = new() { UserId = "" };

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        bookingRequest.GroundId = GroundId;

        if (authenticationStateTask != null)
        {
            var authState = await authenticationStateTask;
            var user = authState?.User;

            if (user?.Identity?.IsAuthenticated == true)
            {
                // Assuming UserId is a string and can be parsed from a claim
                bookingRequest.UserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? "";
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        await Http.PostAsJsonAsync("Booking", bookingRequest);
        NavigationManager.NavigateTo("/my-bookings");
    }
}
