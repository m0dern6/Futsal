
@page "/my-bookings"
@using FutsalApi.ApiService.Data
@using FutsalApi.Data.Models
@using FutsalApi.Data.DTO
@inject HttpClient Http

<PageTitle>My Bookings</PageTitle>

<h1>My Bookings</h1>

@if (bookings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <Grid TItem="BookingResponse" Items="bookings">
        <GridColumn TItem="BookingResponse" HeaderText="Futsal Ground" PropertyName="GroundId" />
        <GridColumn TItem="BookingResponse" HeaderText="Date" PropertyName="BookingDate" />
        <GridColumn TItem="BookingResponse" HeaderText="Start Time" PropertyName="StartTime" />
        <GridColumn TItem="BookingResponse" HeaderText="End Time" PropertyName="EndTime" />
        <GridColumn TItem="BookingResponse" HeaderText="Status" PropertyName="Status" />
        <GridColumn TItem="BookingResponse" HeaderText="Actions">
            @if (context.Status == BookingStatus.Upcoming)
            {
                <Button Color="ButtonColor.Danger" @onclick="() => CancelBooking(context.Id)">Cancel</Button>
            }
        </GridColumn>
    </Grid>
}

@code {
    private BookingResponse[]? bookings;

    protected override async Task OnInitializedAsync()
    {
        bookings = await Http.GetFromJsonAsync<BookingResponse[]>("Booking");
    }

    async Task CancelBooking(int bookingId)
    {
        await Http.PatchAsync($"Booking/cancel/{bookingId}", null);
        bookings = await Http.GetFromJsonAsync<BookingResponse[]>("Booking");
    }
}
