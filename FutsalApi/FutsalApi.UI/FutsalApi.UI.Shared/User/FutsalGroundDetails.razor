
@page "/futsal-grounds/{Id:int}"
@using FutsalApi.Data.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>@futsalGround?.Name</PageTitle>

@if (futsalGround == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <img src="@futsalGround.ImageUrl" class="card-img-top" alt="@futsalGround.Name">
                <div class="card-body">
                    <h1 class="card-title">@futsalGround.Name</h1>
                    <p class="card-text">@futsalGround.Location</p>
                    <p class="card-text">@futsalGround.Description</p>
                    <p class="card-text"><strong>Price:</strong> @futsalGround.PricePerHour.ToString("C") per hour</p>
                    <p class="card-text"><strong>Hours:</strong> @futsalGround.OpenTime - @futsalGround.CloseTime</p>
                    <button class="btn btn-success btn-lg" @onclick="() => BookNow(futsalGround.Id)">Book Now</button>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <ReviewsList GroundId="Id" />
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private FutsalGroundResponse? futsalGround;

    protected override async Task OnInitializedAsync()
    {
        futsalGround = await Http.GetFromJsonAsync<FutsalGroundResponse>($"FutsalGround/{Id}");
    }

    private void BookNow(int groundId)
    {
        NavigationManager.NavigateTo($"/bookings/new/{groundId}");
    }
}
